{"version":3,"file":"static/js/198.cdaf520b.chunk.js","mappings":"0OAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EAGpBC,EAAc,SAAAL,GAAK,OAAIA,CAAJ,EAEnBM,GAAmBC,EAAAA,EAAAA,IAC9B,CAACR,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAI,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASP,EAAOM,cADf,GAG/B,ICbH,EAA8B,iCAA9B,EAA6E,iCAA7E,EAA8H,mC,kBCKjHE,EAAc,SAAC,GAA8B,IAA5BH,EAA2B,EAA3BA,KAAMI,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACpCC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,gBAAIC,UAAWC,EAAf,WACE,kBAAMD,UAAWC,EAAjB,UAAqCT,EAAK,QAC1C,iBAAMQ,UAAWC,EAAjB,SAAuCL,KACvC,mBAAQM,KAAK,SAASC,QAAS,kBATPC,EASiCP,OAR3DC,GAASO,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CASO,EAA/B,SAAkE,aAH7BP,EAQ1C,ECtBD,EAA8B,iCCMjBS,EAAc,WACzB,IAAMtB,GAAWuB,EAAAA,EAAAA,IAAYlB,GAE7B,OACE,eAAIW,UAAWC,EAAf,SACGjB,EAASwB,KAAI,SAAAjB,GAAO,OACnB,SAACI,EAAD,CACEH,KAAMD,EAAQC,KACdI,OAAQL,EAAQK,OAChBC,OAAQN,EAAQa,IACXb,EAAQa,GALI,KAU1B,E,UCrBD,EAA8B,iCAA9B,EAAmF,uCAAnF,EAAyI,kCAAzI,EAA2L,mCCM9KK,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOlB,EAAP,KAAamB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAegB,EAAf,KACMd,GAAWC,EAAAA,EAAAA,MAEXc,GAAgBN,EAAAA,EAAAA,IAAYzB,GAE5BgC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBxB,EAAR,EAAQA,KAAMyB,EAAd,EAAcA,MACD,SAATzB,EACFmB,EAAQM,GACU,WAATzB,GACToB,EAAUK,EAEb,EAuBKC,EAAQ,WACZP,EAAQ,IACRC,EAAU,GACX,EAED,OACE,kBAAMZ,UAAWC,EAAmBkB,SA3BjB,SAAAJ,GAErB,GADAA,EAAEK,iBACkB,KAAhB5B,EAAK6B,QAAmC,KAAlBzB,EAAOyB,OAAjC,CAIA,IAAM9B,EAAU,CAAEC,KAAAA,EAAMI,OAAAA,GACAiB,EAAcS,MACpC,SAAAC,GAAI,OAAIA,EAAK/B,KAAKC,gBAAkBF,EAAQC,KAAKC,aAA7C,IAIJ+B,EAAAA,GAAAA,MAAY,gDAKd1B,GAAS2B,EAAAA,EAAAA,IAAWlC,IACpB2B,IAbC,MAFCM,EAAAA,GAAAA,MAAY,4BAgBf,EAQG,WACE,eAAIxB,UAAWC,EAAf,SAAwC,eACxC,kBACED,UAAWC,EACXC,KAAK,OACLV,KAAK,OACLyB,MAAOzB,EACPkC,SAAUZ,EACVa,YAAY,UAEd,kBACE3B,UAAWC,EACXC,KAAK,MACLV,KAAK,SACLyB,MAAOrB,EACP8B,SAAUZ,EACVa,YAAY,kBAEd,mBAAQ3B,UAAWC,EAAqBC,KAAK,SAA7C,SAAsD,kBAK3D,E,oBCnEY0B,EAAS,WACpB,IAAMX,GAAQV,EAAAA,EAAAA,IAAYrB,GACpBY,GAAWC,EAAAA,EAAAA,MAIX8B,GAAUC,EAAAA,EAAAA,IAAO,IACvB,OACE,4BACE,kBAAOC,QAAQ,GAAG3B,GAAIyB,EAAtB,SAA+B,yBAG/B,kBACE3B,KAAK,OACLe,MAAOA,EACPb,GAAIyB,EACJH,SAbqB,SAAAM,GACzBlC,GAASmC,EAAAA,EAAAA,GAAUD,EAAME,OAAOjB,OACjC,MAeF,E,SCvBYkB,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,ECdD,EAA4B,uBCoC5B,EAxBkB,WAChB,IAAM5C,GAAWC,EAAAA,EAAAA,MACjB,GAAgCQ,EAAAA,EAAAA,IAAYnB,GAApCJ,EAAR,EAAQA,SAAU2D,EAAlB,EAAkBA,UAMlB,OAJAC,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,MACV,GAAE,CAAC/C,KAGF,iBAAKE,UAAWC,EAAhB,WACE,SAACQ,EAAD,KACA,wBAAI,aACHkC,IAAa,SAACR,EAAD,IACbnD,EAASC,MAAM6D,OAAS,GACvB,SAAClB,EAAD,KAEA,uBAAG,gDAEJ5C,EAASC,MAAM6D,OAAS,IAAK,SAACxC,EAAD,KAC9B,SAAC,KAAD,CAAgByC,UAAW,QAGhC,C","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Apx.module.css?a6e7","pages/Phonebook.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectName = state => state.name;\nexport const selectNumber = state => state.number;\nexport const selectState = state => state;\n\nexport const filteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__aUSMv\",\"contactName\":\"ContactItem_contactName__zpIwE\",\"contactNumber\":\"ContactItem_contactNumber__5zn6-\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport style from 'components/ContactList/ContactItem/ContactItem.module.css';\nimport Proptypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ name, number, itemId }) => {\n  const dispatch = useDispatch();\n\n  const handleContactDelete = id => {\n    dispatch(deleteContact(id));\n\n  };\n  \n  return (\n    <li className={style.contactItem} key={itemId}>\n      <span className={style.contactName}>{name}:</span>\n      <span className={style.contactNumber}>{number}</span>\n      <button type=\"button\" onClick={() => handleContactDelete(itemId)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: Proptypes.string.isRequired,\n  number: Proptypes.string.isRequired,\n  itemId: Proptypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListContainer\":\"ContactList_contactListContainer__Mco5m\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { filteredContacts } from 'redux/selectors';\nimport { ContactItem } from 'components/ContactList/ContactItem/ContactItem';\nimport style from 'components/ContactList/ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(filteredContacts);\n\n  return (\n    <ul className={style.contactList}>\n      {contacts.map(contact => (\n        <ContactItem\n          name={contact.name}\n          number={contact.number}\n          itemId={contact.id}\n          key={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactFormHeader\":\"ContactForm_contactFormHeader__gURbL\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactButton\":\"ContactForm_contactButton__jSKp4\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport style from 'components/ContactForm/ContactForm.module.css';\nimport { addContact } from 'redux/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contactsItems = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n  e.preventDefault();\n  if (name.trim() === '' || number.trim() === '') {\n    toast.error('Please fill in all fields');\n    return;\n  }\n  const contact = { name, number };\n  const existingContact = contactsItems.find(\n    item => item.name.toLowerCase() === contact.name.toLowerCase()\n  );\n\n  if (existingContact) {\n    toast.error('The contact is already in the contact book!');\n    return;\n  }\n\n  \n  dispatch(addContact(contact));\n  reset();\n};\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.contactForm} onSubmit={handleSubmit}>\n      <h1 className={style.contactFormHeader}>Phonebook</h1>\n      <input\n        className={style.contactInput}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Name\"\n      />\n      <input\n        className={style.contactInput}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        placeholder=\"Phone number\"\n      />\n      <button className={style.contactButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { selectFilter } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/reducer';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  const inputId = nanoid(10);\n  return (\n    <div>\n      <label htmlFor=\"\" id={inputId}>\n        Find filter by name\n      </label>\n      <input\n        type=\"text\"\n        value={value}\n        id={inputId}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Apx_container__ucoVh\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { selectState } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport style from 'components/Apx.module.css';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const { contacts, isLoading } = useSelector(selectState);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={style.container}>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && <Loader />}\n      {contacts.items.length > 0 ? (\n        <Filter />\n      ) : (\n        <p>Your phonebook is empty. Add first contact!</p>\n      )}\n      {contacts.items.length > 0 && <ContactList />}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectState","filteredContacts","createSelector","contact","name","toLowerCase","includes","ContactItem","number","itemId","dispatch","useDispatch","className","style","type","onClick","id","deleteContact","ContactList","useSelector","map","ContactForm","useState","setName","setNumber","contactsItems","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","trim","find","item","toast","addContact","onChange","placeholder","Filter","inputId","nanoid","htmlFor","event","setFilter","target","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","isLoading","useEffect","fetchContacts","length","autoClose"],"sourceRoot":""}